INFO  16:32:28,109 - Compiling source file: C:\Users\makib\Desktop\MJCompiler\MJCompiler\test\javniTestB.mj
INFO  16:32:28,175 - #2 program
INFO  16:32:28,175 - #42 test302
INFO  16:32:28,175 - #4 const
INFO  16:32:28,177 - #42 int
INFO  16:32:28,177 - #42 jedan
INFO  16:32:28,178 - #34 =
INFO  16:32:28,179 - #39 1
INFO  16:32:28,179 - #14 ;
INFO  16:32:28,181 - #42 int
INFO  16:32:28,182 - #42 i
INFO  16:32:28,182 - #37 ,
INFO  16:32:28,182 - #42 j
INFO  16:32:28,183 - #14 ;
INFO  16:32:28,183 - #42 bool
INFO  16:32:28,184 - #42 ibool
INFO  16:32:28,184 - #14 ;
INFO  16:32:28,184 - #42 int
INFO  16:32:28,184 - #42 niz
INFO  16:32:28,185 - #17 [
INFO  16:32:28,185 - #18 ]
INFO  16:32:28,185 - #14 ;
INFO  16:32:28,185 - #12 {
INFO  16:32:28,186 - #42 int
INFO  16:32:28,187 - #42 sum
INFO  16:32:28,187 - #15 (
INFO  16:32:28,188 - #42 int
INFO  16:32:28,188 - #42 z
INFO  16:32:28,188 - #37 ,
INFO  16:32:28,189 - #42 int
INFO  16:32:28,189 - #42 d
INFO  16:32:28,189 - #16 )
INFO  16:32:28,190 - #12 {
INFO  16:32:28,190 - #7 return
INFO  16:32:28,190 - #42 z
INFO  16:32:28,190 - #21 +
INFO  16:32:28,191 - #42 d
INFO  16:32:28,192 - #14 ;
INFO  16:32:28,193 - #13 }
INFO  16:32:28,193 - #42 int
INFO  16:32:28,194 - #42 inkrement
INFO  16:32:28,194 - #15 (
INFO  16:32:28,194 - #42 int
INFO  16:32:28,194 - #42 a
INFO  16:32:28,195 - #37 ,
INFO  16:32:28,196 - #42 int
INFO  16:32:28,196 - #42 inc
INFO  16:32:28,196 - #16 )
INFO  16:32:28,196 - #42 int
INFO  16:32:28,196 - #42 pom
INFO  16:32:28,196 - #14 ;
INFO  16:32:28,196 - #12 {
INFO  16:32:28,196 - #43 if
INFO  16:32:28,196 - #15 (
INFO  16:32:28,196 - #42 inc
INFO  16:32:28,196 - #26 ==
INFO  16:32:28,196 - #42 jedan
INFO  16:32:28,198 - #16 )
INFO  16:32:28,200 - #42 pom
INFO  16:32:28,200 - #34 =
INFO  16:32:28,200 - #39 1
INFO  16:32:28,201 - #14 ;
INFO  16:32:28,201 - #44 else
INFO  16:32:28,203 - #43 if
INFO  16:32:28,203 - #15 (
INFO  16:32:28,203 - #42 inc
INFO  16:32:28,203 - #26 ==
INFO  16:32:28,203 - #39 2
INFO  16:32:28,203 - #16 )
INFO  16:32:28,203 - #42 pom
INFO  16:32:28,203 - #34 =
INFO  16:32:28,203 - #42 a
INFO  16:32:28,203 - #14 ;
INFO  16:32:28,203 - #7 return
INFO  16:32:28,204 - #42 sum
INFO  16:32:28,205 - #15 (
INFO  16:32:28,205 - #42 a
INFO  16:32:28,205 - #37 ,
INFO  16:32:28,205 - #42 pom
INFO  16:32:28,205 - #16 )
INFO  16:32:28,205 - #14 ;
INFO  16:32:28,206 - #13 }
INFO  16:32:28,207 - #42 bool
INFO  16:32:28,207 - #42 verify
INFO  16:32:28,207 - #15 (
INFO  16:32:28,207 - #16 )
INFO  16:32:28,207 - #12 {
INFO  16:32:28,207 - #5 print
INFO  16:32:28,207 - #15 (
INFO  16:32:28,207 - #41 v
INFO  16:32:28,207 - #16 )
INFO  16:32:28,207 - #14 ;
INFO  16:32:28,208 - #7 return
INFO  16:32:28,208 - #40 false
INFO  16:32:28,208 - #14 ;
INFO  16:32:28,208 - #13 }
INFO  16:32:28,208 - #8 void
INFO  16:32:28,208 - #42 main
INFO  16:32:28,209 - #15 (
INFO  16:32:28,209 - #16 )
INFO  16:32:28,209 - #12 {
INFO  16:32:28,209 - #43 if
INFO  16:32:28,210 - #15 (
INFO  16:32:28,210 - #39 1
INFO  16:32:28,210 - #27 !=
INFO  16:32:28,210 - #39 1
INFO  16:32:28,211 - #16 )
INFO  16:32:28,211 - #5 print
INFO  16:32:28,211 - #15 (
INFO  16:32:28,211 - #22 -
INFO  16:32:28,211 - #39 6
INFO  16:32:28,212 - #16 )
INFO  16:32:28,213 - #14 ;
INFO  16:32:28,213 - #44 else
INFO  16:32:28,213 - #5 print
INFO  16:32:28,213 - #15 (
INFO  16:32:28,213 - #39 0
INFO  16:32:28,213 - #16 )
INFO  16:32:28,213 - #14 ;
INFO  16:32:28,213 - #42 ibool
INFO  16:32:28,214 - #34 =
INFO  16:32:28,214 - #40 false
INFO  16:32:28,214 - #14 ;
INFO  16:32:28,214 - #42 i
INFO  16:32:28,214 - #34 =
INFO  16:32:28,214 - #39 0
INFO  16:32:28,214 - #14 ;
INFO  16:32:28,214 - #10 do
INFO  16:32:28,215 - #12 {
INFO  16:32:28,215 - #43 if
INFO  16:32:28,215 - #15 (
INFO  16:32:28,215 - #42 i
INFO  16:32:28,215 - #26 ==
INFO  16:32:28,220 - #39 2
INFO  16:32:28,220 - #16 )
INFO  16:32:28,220 - #42 ibool
INFO  16:32:28,220 - #34 =
INFO  16:32:28,220 - #40 true
INFO  16:32:28,220 - #14 ;
INFO  16:32:28,221 - #42 i
INFO  16:32:28,221 - #35 ++
INFO  16:32:28,221 - #14 ;
INFO  16:32:28,221 - #13 }
INFO  16:32:28,221 - #11 while
INFO  16:32:28,222 - #15 (
INFO  16:32:28,222 - #42 i
INFO  16:32:28,222 - #30 <
INFO  16:32:28,222 - #39 5
INFO  16:32:28,223 - #16 )
INFO  16:32:28,223 - #14 ;
ERROR 16:32:28,223 - 
Sintaksna greska na liniji 43
ERROR 16:32:28,224 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 43
