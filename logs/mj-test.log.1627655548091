INFO  16:26:53,013 - Compiling source file: C:\Users\makib\Desktop\MJCompiler\MJCompiler\test\javniTestB.mj
INFO  16:26:53,054 - #2 program
INFO  16:26:53,054 - #42 test302
INFO  16:26:53,054 - #4 const
INFO  16:26:53,056 - #42 int
INFO  16:26:53,056 - #42 jedan
INFO  16:26:53,056 - #34 =
INFO  16:26:53,057 - #39 1
INFO  16:26:53,057 - #14 ;
INFO  16:26:53,058 - #42 int
INFO  16:26:53,058 - #42 i
INFO  16:26:53,058 - #37 ,
INFO  16:26:53,058 - #42 j
INFO  16:26:53,059 - #14 ;
INFO  16:26:53,059 - #42 bool
INFO  16:26:53,059 - #42 ibool
INFO  16:26:53,059 - #14 ;
INFO  16:26:53,059 - #42 int
INFO  16:26:53,059 - #42 niz
INFO  16:26:53,059 - #17 [
INFO  16:26:53,060 - #18 ]
INFO  16:26:53,060 - #14 ;
INFO  16:26:53,068 - #12 {
INFO  16:26:53,068 - #42 int
INFO  16:26:53,069 - #42 sum
INFO  16:26:53,069 - #15 (
INFO  16:26:53,070 - #42 int
INFO  16:26:53,070 - #42 z
INFO  16:26:53,070 - #37 ,
INFO  16:26:53,070 - #42 int
INFO  16:26:53,070 - #42 d
INFO  16:26:53,070 - #16 )
INFO  16:26:53,071 - #12 {
INFO  16:26:53,071 - #7 return
INFO  16:26:53,071 - #42 z
INFO  16:26:53,071 - #21 +
INFO  16:26:53,072 - #42 d
INFO  16:26:53,073 - #14 ;
INFO  16:26:53,074 - #13 }
INFO  16:26:53,074 - #42 int
INFO  16:26:53,074 - #42 inkrement
INFO  16:26:53,074 - #15 (
INFO  16:26:53,074 - #42 int
INFO  16:26:53,075 - #42 a
INFO  16:26:53,075 - #37 ,
INFO  16:26:53,075 - #42 int
INFO  16:26:53,075 - #42 inc
INFO  16:26:53,075 - #16 )
INFO  16:26:53,075 - #42 int
INFO  16:26:53,075 - #42 pom
INFO  16:26:53,075 - #14 ;
INFO  16:26:53,075 - #12 {
INFO  16:26:53,075 - #43 if
INFO  16:26:53,075 - #15 (
INFO  16:26:53,075 - #42 inc
INFO  16:26:53,075 - #26 ==
INFO  16:26:53,075 - #42 jedan
INFO  16:26:53,076 - #16 )
INFO  16:26:53,077 - #42 pom
INFO  16:26:53,078 - #34 =
INFO  16:26:53,078 - #39 1
INFO  16:26:53,079 - #14 ;
INFO  16:26:53,079 - #44 else
INFO  16:26:53,080 - #43 if
INFO  16:26:53,080 - #15 (
INFO  16:26:53,081 - #42 inc
INFO  16:26:53,081 - #26 ==
INFO  16:26:53,081 - #39 2
INFO  16:26:53,081 - #16 )
INFO  16:26:53,081 - #42 pom
INFO  16:26:53,081 - #34 =
INFO  16:26:53,081 - #42 a
INFO  16:26:53,081 - #14 ;
INFO  16:26:53,081 - #7 return
INFO  16:26:53,082 - #42 sum
INFO  16:26:53,082 - #15 (
INFO  16:26:53,082 - #42 a
INFO  16:26:53,082 - #37 ,
INFO  16:26:53,083 - #42 pom
INFO  16:26:53,083 - #16 )
INFO  16:26:53,083 - #14 ;
INFO  16:26:53,083 - #13 }
INFO  16:26:53,083 - #42 bool
INFO  16:26:53,083 - #42 verify
INFO  16:26:53,083 - #15 (
INFO  16:26:53,084 - #16 )
INFO  16:26:53,084 - #12 {
INFO  16:26:53,084 - #5 print
INFO  16:26:53,084 - #15 (
INFO  16:26:53,084 - #41 v
INFO  16:26:53,084 - #16 )
INFO  16:26:53,085 - #14 ;
INFO  16:26:53,085 - #7 return
INFO  16:26:53,085 - #40 false
INFO  16:26:53,085 - #14 ;
INFO  16:26:53,085 - #13 }
INFO  16:26:53,085 - #8 void
INFO  16:26:53,085 - #42 main
INFO  16:26:53,086 - #15 (
INFO  16:26:53,086 - #16 )
INFO  16:26:53,086 - #12 {
INFO  16:26:53,086 - #43 if
INFO  16:26:53,086 - #15 (
INFO  16:26:53,086 - #39 1
INFO  16:26:53,086 - #27 !=
INFO  16:26:53,086 - #39 1
INFO  16:26:53,087 - #16 )
INFO  16:26:53,087 - #5 print
INFO  16:26:53,087 - #15 (
INFO  16:26:53,087 - #22 -
INFO  16:26:53,087 - #39 6
INFO  16:26:53,088 - #16 )
INFO  16:26:53,088 - #14 ;
INFO  16:26:53,088 - #44 else
INFO  16:26:53,089 - #5 print
INFO  16:26:53,089 - #15 (
INFO  16:26:53,089 - #39 0
INFO  16:26:53,089 - #16 )
INFO  16:26:53,089 - #14 ;
INFO  16:26:53,089 - #42 ibool
INFO  16:26:53,089 - #34 =
INFO  16:26:53,089 - #40 false
INFO  16:26:53,089 - #14 ;
INFO  16:26:53,089 - #42 i
INFO  16:26:53,089 - #34 =
INFO  16:26:53,089 - #39 0
INFO  16:26:53,089 - #14 ;
INFO  16:26:53,090 - #10 do
INFO  16:26:53,090 - #12 {
INFO  16:26:53,090 - #43 if
INFO  16:26:53,090 - #15 (
INFO  16:26:53,090 - #42 i
INFO  16:26:53,090 - #26 ==
INFO  16:26:53,095 - #39 2
INFO  16:26:53,095 - #16 )
INFO  16:26:53,096 - #42 ibool
INFO  16:26:53,096 - #34 =
INFO  16:26:53,096 - #40 true
INFO  16:26:53,096 - #14 ;
INFO  16:26:53,096 - #42 i
INFO  16:26:53,096 - #35 ++
INFO  16:26:53,096 - #14 ;
INFO  16:26:53,096 - #13 }
INFO  16:26:53,096 - #11 while
INFO  16:26:53,096 - #15 (
INFO  16:26:53,096 - #42 i
INFO  16:26:53,096 - #30 <
INFO  16:26:53,096 - #39 5
INFO  16:26:53,097 - #16 )
INFO  16:26:53,097 - #14 ;
ERROR 16:26:53,097 - 
Sintaksna greska na liniji 43
ERROR 16:26:53,097 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 43
